syntax = "proto3";

package rpc;

message Request {
    message DeleteRequest {     // delete an exiting reservation for a given ID
        repeated string ID = 1; // list of IDs
        bool all = 2;   // signals to delete every single resource reservation.
    }
    message ResourceRequest {   // reserve resources for a given ID
        string ID = 1;
        int32 throughputMB = 2;
        int64 tstart = 3;
        int64 tstop = 4;
        repeated string files = 5;
    }

    message ListJobsRequest {     // get a list of all jobs
        string regex = 1; // regex for IDs. If not given, all jobs will be listed.
    }

    enum Type {
        INVALID = 0;
        RESERVE = 1;
        DELETE = 2;
        LISTJOBS = 3;
    }

    Type type = 1;
    oneof rt {
        ResourceRequest resourceRequest = 2;
        DeleteRequest deleteRequest = 3;
        ListJobsRequest listJobsRequest = 4;
    }
}


message Error {
    enum errorType {
        EARGS = 0;      // invalid arguments (e.g. unknown JOBID given in a delete request)
        EUNKNOWN = 1;   // unknown/unspecified error
    }
    errorType error = 1;
    string msg = 2;
}


message Reply {
    int32 rc = 1;
    Error error = 2;
    string return_msg = 3;
}

// The main message body.
message Message {
    enum Type {
        REQUEST = 0;
        REPLY = 1;
    }

    Type type = 1;
    oneof rq {
        Request request = 2;
        Reply   reply = 3;
    }
}
