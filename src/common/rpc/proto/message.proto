syntax = "proto2";

package rpc;

message Request {
    message DeleteRequest {     // delete an exiting reservation for a given ID
        repeated string ID = 1; // list of IDs
        optional bool all = 2;   // signals to delete every single resource reservation.
    }
    message ResourceRequest {   // reserve resources for a given ID
        message ResourceDefinition {
            optional string file = 1;
            optional int32 throughputMB = 2;
            optional int64 tstart = 3;
            optional int64 tstop = 4;
        }
        required string ID = 1;
        repeated ResourceDefinition requestedResources = 2;
    }

    message ListJobsRequest {     // get a list of all jobs
        optional string regex = 1; // regex for IDs. If not given, all jobs will be listed.
    }

    enum Type {
        RESERVE = 0;
        DELETE = 1;
        LISTJOBS = 2;
    }

    required Type type = 1;
    oneof rt {
        ResourceRequest resourceRequest = 2;
        DeleteRequest deleteRequest = 3;
        ListJobsRequest listJobsRequest = 4;
    }
}


message Error {
    enum errorType {
        EARGS = 0;      // invalid arguments (e.g. unknown JOBID given in a delete request)
        EUNKNOWN = 1;   // unknown/unspecified error
    }
    required errorType error = 1;
    optional string msg = 2;
}


message Reply {
    required int32 rc = 1;
    optional Error error = 2;
    optional string return_msg = 3;
}

// The main message body.
message Message {
    enum Type {
        REQUEST = 0;
        REPLY = 1;
    }

    required Type type = 1;
    oneof rq {
        Request request = 2;
        Reply   reply = 3;
    }
}
