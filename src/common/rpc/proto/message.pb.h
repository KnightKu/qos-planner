// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_InitDefaults_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Error;
class Message;
class Reply;
class Request;
class Request_DeleteRequest;
class Request_ListJobsRequest;
class Request_ResourceRequest;

enum Request_Type {
  Request_Type_INVALID = 0,
  Request_Type_RESERVE = 1,
  Request_Type_DELETE = 2,
  Request_Type_LISTJOBS = 3,
  Request_Type_Request_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Request_Type_Request_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Request_Type_IsValid(int value);
const Request_Type Request_Type_Type_MIN = Request_Type_INVALID;
const Request_Type Request_Type_Type_MAX = Request_Type_LISTJOBS;
const int Request_Type_Type_ARRAYSIZE = Request_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Type_descriptor();
inline const ::std::string& Request_Type_Name(Request_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Type_descriptor(), value);
}
inline bool Request_Type_Parse(
    const ::std::string& name, Request_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Type>(
    Request_Type_descriptor(), name, value);
}
enum Error_errorType {
  Error_errorType_EARGS = 0,
  Error_errorType_EUNKNOWN = 1,
  Error_errorType_Error_errorType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Error_errorType_Error_errorType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Error_errorType_IsValid(int value);
const Error_errorType Error_errorType_errorType_MIN = Error_errorType_EARGS;
const Error_errorType Error_errorType_errorType_MAX = Error_errorType_EUNKNOWN;
const int Error_errorType_errorType_ARRAYSIZE = Error_errorType_errorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Error_errorType_descriptor();
inline const ::std::string& Error_errorType_Name(Error_errorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Error_errorType_descriptor(), value);
}
inline bool Error_errorType_Parse(
    const ::std::string& name, Error_errorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Error_errorType>(
    Error_errorType_descriptor(), name, value);
}
enum Message_Type {
  Message_Type_REQUEST = 0,
  Message_Type_REPLY = 1,
  Message_Type_Message_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Message_Type_Message_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Message_Type_IsValid(int value);
const Message_Type Message_Type_Type_MIN = Message_Type_REQUEST;
const Message_Type Message_Type_Type_MAX = Message_Type_REPLY;
const int Message_Type_Type_ARRAYSIZE = Message_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_Type_descriptor();
inline const ::std::string& Message_Type_Name(Message_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_Type_descriptor(), value);
}
inline bool Message_Type_Parse(
    const ::std::string& name, Message_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_Type>(
    Message_Type_descriptor(), name, value);
}
// ===================================================================

class Request_DeleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Request.DeleteRequest) */ {
 public:
  Request_DeleteRequest();
  virtual ~Request_DeleteRequest();

  Request_DeleteRequest(const Request_DeleteRequest& from);

  inline Request_DeleteRequest& operator=(const Request_DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_DeleteRequest& default_instance();

  static const Request_DeleteRequest* internal_default_instance();

  void Swap(Request_DeleteRequest* other);

  // implements Message ----------------------------------------------

  inline Request_DeleteRequest* New() const { return New(NULL); }

  Request_DeleteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_DeleteRequest& from);
  void MergeFrom(const Request_DeleteRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_DeleteRequest* other);
  void UnsafeMergeFrom(const Request_DeleteRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string ID = 1;
  int id_size() const;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id(int index) const;
  ::std::string* mutable_id(int index);
  void set_id(int index, const ::std::string& value);
  void set_id(int index, const char* value);
  void set_id(int index, const char* value, size_t size);
  ::std::string* add_id();
  void add_id(const ::std::string& value);
  void add_id(const char* value);
  void add_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_id();

  // optional bool all = 2;
  void clear_all();
  static const int kAllFieldNumber = 2;
  bool all() const;
  void set_all(bool value);

  // @@protoc_insertion_point(class_scope:rpc.Request.DeleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> id_;
  bool all_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request_DeleteRequest> Request_DeleteRequest_default_instance_;

// -------------------------------------------------------------------

class Request_ResourceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Request.ResourceRequest) */ {
 public:
  Request_ResourceRequest();
  virtual ~Request_ResourceRequest();

  Request_ResourceRequest(const Request_ResourceRequest& from);

  inline Request_ResourceRequest& operator=(const Request_ResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_ResourceRequest& default_instance();

  static const Request_ResourceRequest* internal_default_instance();

  void Swap(Request_ResourceRequest* other);

  // implements Message ----------------------------------------------

  inline Request_ResourceRequest* New() const { return New(NULL); }

  Request_ResourceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_ResourceRequest& from);
  void MergeFrom(const Request_ResourceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_ResourceRequest* other);
  void UnsafeMergeFrom(const Request_ResourceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int32 throughputMB = 2;
  void clear_throughputmb();
  static const int kThroughputMBFieldNumber = 2;
  ::google::protobuf::int32 throughputmb() const;
  void set_throughputmb(::google::protobuf::int32 value);

  // optional int64 tstart = 3;
  void clear_tstart();
  static const int kTstartFieldNumber = 3;
  ::google::protobuf::int64 tstart() const;
  void set_tstart(::google::protobuf::int64 value);

  // optional int64 tstop = 4;
  void clear_tstop();
  static const int kTstopFieldNumber = 4;
  ::google::protobuf::int64 tstop() const;
  void set_tstop(::google::protobuf::int64 value);

  // repeated string files = 5;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 5;
  const ::std::string& files(int index) const;
  ::std::string* mutable_files(int index);
  void set_files(int index, const ::std::string& value);
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, size_t size);
  ::std::string* add_files();
  void add_files(const ::std::string& value);
  void add_files(const char* value);
  void add_files(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& files() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_files();

  // @@protoc_insertion_point(class_scope:rpc.Request.ResourceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> files_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::int64 tstart_;
  ::google::protobuf::int64 tstop_;
  ::google::protobuf::int32 throughputmb_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request_ResourceRequest> Request_ResourceRequest_default_instance_;

// -------------------------------------------------------------------

class Request_ListJobsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Request.ListJobsRequest) */ {
 public:
  Request_ListJobsRequest();
  virtual ~Request_ListJobsRequest();

  Request_ListJobsRequest(const Request_ListJobsRequest& from);

  inline Request_ListJobsRequest& operator=(const Request_ListJobsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_ListJobsRequest& default_instance();

  static const Request_ListJobsRequest* internal_default_instance();

  void Swap(Request_ListJobsRequest* other);

  // implements Message ----------------------------------------------

  inline Request_ListJobsRequest* New() const { return New(NULL); }

  Request_ListJobsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_ListJobsRequest& from);
  void MergeFrom(const Request_ListJobsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_ListJobsRequest* other);
  void UnsafeMergeFrom(const Request_ListJobsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string regex = 1;
  void clear_regex();
  static const int kRegexFieldNumber = 1;
  const ::std::string& regex() const;
  void set_regex(const ::std::string& value);
  void set_regex(const char* value);
  void set_regex(const char* value, size_t size);
  ::std::string* mutable_regex();
  ::std::string* release_regex();
  void set_allocated_regex(::std::string* regex);

  // @@protoc_insertion_point(class_scope:rpc.Request.ListJobsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request_ListJobsRequest> Request_ListJobsRequest_default_instance_;

// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum RtCase {
    kResourceRequest = 2,
    kDeleteRequest = 3,
    kListJobsRequest = 4,
    RT_NOT_SET = 0,
  };

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_DeleteRequest DeleteRequest;
  typedef Request_ResourceRequest ResourceRequest;
  typedef Request_ListJobsRequest ListJobsRequest;

  typedef Request_Type Type;
  static const Type INVALID =
    Request_Type_INVALID;
  static const Type RESERVE =
    Request_Type_RESERVE;
  static const Type DELETE =
    Request_Type_DELETE;
  static const Type LISTJOBS =
    Request_Type_LISTJOBS;
  static inline bool Type_IsValid(int value) {
    return Request_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Request_Type_Type_MIN;
  static const Type Type_MAX =
    Request_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Request_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Request_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Request_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Request_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .rpc.Request.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::rpc::Request_Type type() const;
  void set_type(::rpc::Request_Type value);

  // optional .rpc.Request.ResourceRequest resourceRequest = 2;
  bool has_resourcerequest() const;
  void clear_resourcerequest();
  static const int kResourceRequestFieldNumber = 2;
  const ::rpc::Request_ResourceRequest& resourcerequest() const;
  ::rpc::Request_ResourceRequest* mutable_resourcerequest();
  ::rpc::Request_ResourceRequest* release_resourcerequest();
  void set_allocated_resourcerequest(::rpc::Request_ResourceRequest* resourcerequest);

  // optional .rpc.Request.DeleteRequest deleteRequest = 3;
  bool has_deleterequest() const;
  void clear_deleterequest();
  static const int kDeleteRequestFieldNumber = 3;
  const ::rpc::Request_DeleteRequest& deleterequest() const;
  ::rpc::Request_DeleteRequest* mutable_deleterequest();
  ::rpc::Request_DeleteRequest* release_deleterequest();
  void set_allocated_deleterequest(::rpc::Request_DeleteRequest* deleterequest);

  // optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
  bool has_listjobsrequest() const;
  void clear_listjobsrequest();
  static const int kListJobsRequestFieldNumber = 4;
  const ::rpc::Request_ListJobsRequest& listjobsrequest() const;
  ::rpc::Request_ListJobsRequest* mutable_listjobsrequest();
  ::rpc::Request_ListJobsRequest* release_listjobsrequest();
  void set_allocated_listjobsrequest(::rpc::Request_ListJobsRequest* listjobsrequest);

  RtCase rt_case() const;
  // @@protoc_insertion_point(class_scope:rpc.Request)
 private:
  inline void set_has_resourcerequest();
  inline void set_has_deleterequest();
  inline void set_has_listjobsrequest();

  inline bool has_rt() const;
  void clear_rt();
  inline void clear_has_rt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  union RtUnion {
    RtUnion() {}
    ::rpc::Request_ResourceRequest* resourcerequest_;
    ::rpc::Request_DeleteRequest* deleterequest_;
    ::rpc::Request_ListJobsRequest* listjobsrequest_;
  } rt_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static const Error* internal_default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error* other);
  void UnsafeMergeFrom(const Error& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Error_errorType errorType;
  static const errorType EARGS =
    Error_errorType_EARGS;
  static const errorType EUNKNOWN =
    Error_errorType_EUNKNOWN;
  static inline bool errorType_IsValid(int value) {
    return Error_errorType_IsValid(value);
  }
  static const errorType errorType_MIN =
    Error_errorType_errorType_MIN;
  static const errorType errorType_MAX =
    Error_errorType_errorType_MAX;
  static const int errorType_ARRAYSIZE =
    Error_errorType_errorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  errorType_descriptor() {
    return Error_errorType_descriptor();
  }
  static inline const ::std::string& errorType_Name(errorType value) {
    return Error_errorType_Name(value);
  }
  static inline bool errorType_Parse(const ::std::string& name,
      errorType* value) {
    return Error_errorType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .rpc.Error.errorType error = 1;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  ::rpc::Error_errorType error() const;
  void set_error(::rpc::Error_errorType value);

  // optional string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:rpc.Error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  int error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Reply) */ {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  static const Reply* internal_default_instance();

  void Swap(Reply* other);

  // implements Message ----------------------------------------------

  inline Reply* New() const { return New(NULL); }

  Reply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Reply* other);
  void UnsafeMergeFrom(const Reply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 rc = 1;
  void clear_rc();
  static const int kRcFieldNumber = 1;
  ::google::protobuf::int32 rc() const;
  void set_rc(::google::protobuf::int32 value);

  // optional .rpc.Error error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::rpc::Error& error() const;
  ::rpc::Error* mutable_error();
  ::rpc::Error* release_error();
  void set_allocated_error(::rpc::Error* error);

  // optional string return_msg = 3;
  void clear_return_msg();
  static const int kReturnMsgFieldNumber = 3;
  const ::std::string& return_msg() const;
  void set_return_msg(const ::std::string& value);
  void set_return_msg(const char* value);
  void set_return_msg(const char* value, size_t size);
  ::std::string* mutable_return_msg();
  ::std::string* release_return_msg();
  void set_allocated_return_msg(::std::string* return_msg);

  // @@protoc_insertion_point(class_scope:rpc.Reply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr return_msg_;
  ::rpc::Error* error_;
  ::google::protobuf::int32 rc_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Reply> Reply_default_instance_;

// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  enum RqCase {
    kRequest = 2,
    kReply = 3,
    RQ_NOT_SET = 0,
  };

  static const Message* internal_default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  void UnsafeMergeFrom(const Message& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Message_Type Type;
  static const Type REQUEST =
    Message_Type_REQUEST;
  static const Type REPLY =
    Message_Type_REPLY;
  static inline bool Type_IsValid(int value) {
    return Message_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Message_Type_Type_MIN;
  static const Type Type_MAX =
    Message_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Message_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Message_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Message_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Message_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .rpc.Message.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::rpc::Message_Type type() const;
  void set_type(::rpc::Message_Type value);

  // optional .rpc.Request request = 2;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 2;
  const ::rpc::Request& request() const;
  ::rpc::Request* mutable_request();
  ::rpc::Request* release_request();
  void set_allocated_request(::rpc::Request* request);

  // optional .rpc.Reply reply = 3;
  bool has_reply() const;
  void clear_reply();
  static const int kReplyFieldNumber = 3;
  const ::rpc::Reply& reply() const;
  ::rpc::Reply* mutable_reply();
  ::rpc::Reply* release_reply();
  void set_allocated_reply(::rpc::Reply* reply);

  RqCase rq_case() const;
  // @@protoc_insertion_point(class_scope:rpc.Message)
 private:
  inline void set_has_request();
  inline void set_has_reply();

  inline bool has_rq() const;
  void clear_rq();
  inline void clear_has_rq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  union RqUnion {
    RqUnion() {}
    ::rpc::Request* request_;
    ::rpc::Reply* reply_;
  } rq_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_message_2eproto_impl();
  friend void  protobuf_AddDesc_message_2eproto_impl();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_DeleteRequest

// repeated string ID = 1;
inline int Request_DeleteRequest::id_size() const {
  return id_.size();
}
inline void Request_DeleteRequest::clear_id() {
  id_.Clear();
}
inline const ::std::string& Request_DeleteRequest::id(int index) const {
  // @@protoc_insertion_point(field_get:rpc.Request.DeleteRequest.ID)
  return id_.Get(index);
}
inline ::std::string* Request_DeleteRequest::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.Request.DeleteRequest.ID)
  return id_.Mutable(index);
}
inline void Request_DeleteRequest::set_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rpc.Request.DeleteRequest.ID)
  id_.Mutable(index)->assign(value);
}
inline void Request_DeleteRequest::set_id(int index, const char* value) {
  id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Request.DeleteRequest.ID)
}
inline void Request_DeleteRequest::set_id(int index, const char* value, size_t size) {
  id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.DeleteRequest.ID)
}
inline ::std::string* Request_DeleteRequest::add_id() {
  // @@protoc_insertion_point(field_add_mutable:rpc.Request.DeleteRequest.ID)
  return id_.Add();
}
inline void Request_DeleteRequest::add_id(const ::std::string& value) {
  id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rpc.Request.DeleteRequest.ID)
}
inline void Request_DeleteRequest::add_id(const char* value) {
  id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rpc.Request.DeleteRequest.ID)
}
inline void Request_DeleteRequest::add_id(const char* value, size_t size) {
  id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rpc.Request.DeleteRequest.ID)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_DeleteRequest::id() const {
  // @@protoc_insertion_point(field_list:rpc.Request.DeleteRequest.ID)
  return id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_DeleteRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:rpc.Request.DeleteRequest.ID)
  return &id_;
}

// optional bool all = 2;
inline void Request_DeleteRequest::clear_all() {
  all_ = false;
}
inline bool Request_DeleteRequest::all() const {
  // @@protoc_insertion_point(field_get:rpc.Request.DeleteRequest.all)
  return all_;
}
inline void Request_DeleteRequest::set_all(bool value) {
  
  all_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.DeleteRequest.all)
}

inline const Request_DeleteRequest* Request_DeleteRequest::internal_default_instance() {
  return &Request_DeleteRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Request_ResourceRequest

// optional string ID = 1;
inline void Request_ResourceRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request_ResourceRequest::id() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_ResourceRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.ID)
}
inline void Request_ResourceRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Request.ResourceRequest.ID)
}
inline void Request_ResourceRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.ResourceRequest.ID)
}
inline ::std::string* Request_ResourceRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Request.ResourceRequest.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_ResourceRequest::release_id() {
  // @@protoc_insertion_point(field_release:rpc.Request.ResourceRequest.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_ResourceRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.ResourceRequest.ID)
}

// optional int32 throughputMB = 2;
inline void Request_ResourceRequest::clear_throughputmb() {
  throughputmb_ = 0;
}
inline ::google::protobuf::int32 Request_ResourceRequest::throughputmb() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.throughputMB)
  return throughputmb_;
}
inline void Request_ResourceRequest::set_throughputmb(::google::protobuf::int32 value) {
  
  throughputmb_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.throughputMB)
}

// optional int64 tstart = 3;
inline void Request_ResourceRequest::clear_tstart() {
  tstart_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Request_ResourceRequest::tstart() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.tstart)
  return tstart_;
}
inline void Request_ResourceRequest::set_tstart(::google::protobuf::int64 value) {
  
  tstart_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.tstart)
}

// optional int64 tstop = 4;
inline void Request_ResourceRequest::clear_tstop() {
  tstop_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Request_ResourceRequest::tstop() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.tstop)
  return tstop_;
}
inline void Request_ResourceRequest::set_tstop(::google::protobuf::int64 value) {
  
  tstop_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.tstop)
}

// repeated string files = 5;
inline int Request_ResourceRequest::files_size() const {
  return files_.size();
}
inline void Request_ResourceRequest::clear_files() {
  files_.Clear();
}
inline const ::std::string& Request_ResourceRequest::files(int index) const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.files)
  return files_.Get(index);
}
inline ::std::string* Request_ResourceRequest::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.Request.ResourceRequest.files)
  return files_.Mutable(index);
}
inline void Request_ResourceRequest::set_files(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.files)
  files_.Mutable(index)->assign(value);
}
inline void Request_ResourceRequest::set_files(int index, const char* value) {
  files_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Request.ResourceRequest.files)
}
inline void Request_ResourceRequest::set_files(int index, const char* value, size_t size) {
  files_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.ResourceRequest.files)
}
inline ::std::string* Request_ResourceRequest::add_files() {
  // @@protoc_insertion_point(field_add_mutable:rpc.Request.ResourceRequest.files)
  return files_.Add();
}
inline void Request_ResourceRequest::add_files(const ::std::string& value) {
  files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rpc.Request.ResourceRequest.files)
}
inline void Request_ResourceRequest::add_files(const char* value) {
  files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rpc.Request.ResourceRequest.files)
}
inline void Request_ResourceRequest::add_files(const char* value, size_t size) {
  files_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rpc.Request.ResourceRequest.files)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_ResourceRequest::files() const {
  // @@protoc_insertion_point(field_list:rpc.Request.ResourceRequest.files)
  return files_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Request_ResourceRequest::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:rpc.Request.ResourceRequest.files)
  return &files_;
}

inline const Request_ResourceRequest* Request_ResourceRequest::internal_default_instance() {
  return &Request_ResourceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Request_ListJobsRequest

// optional string regex = 1;
inline void Request_ListJobsRequest::clear_regex() {
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Request_ListJobsRequest::regex() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ListJobsRequest.regex)
  return regex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_ListJobsRequest::set_regex(const ::std::string& value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Request.ListJobsRequest.regex)
}
inline void Request_ListJobsRequest::set_regex(const char* value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Request.ListJobsRequest.regex)
}
inline void Request_ListJobsRequest::set_regex(const char* value, size_t size) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.ListJobsRequest.regex)
}
inline ::std::string* Request_ListJobsRequest::mutable_regex() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Request.ListJobsRequest.regex)
  return regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_ListJobsRequest::release_regex() {
  // @@protoc_insertion_point(field_release:rpc.Request.ListJobsRequest.regex)
  
  return regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_ListJobsRequest::set_allocated_regex(::std::string* regex) {
  if (regex != NULL) {
    
  } else {
    
  }
  regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex);
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.ListJobsRequest.regex)
}

inline const Request_ListJobsRequest* Request_ListJobsRequest::internal_default_instance() {
  return &Request_ListJobsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional .rpc.Request.Type type = 1;
inline void Request::clear_type() {
  type_ = 0;
}
inline ::rpc::Request_Type Request::type() const {
  // @@protoc_insertion_point(field_get:rpc.Request.type)
  return static_cast< ::rpc::Request_Type >(type_);
}
inline void Request::set_type(::rpc::Request_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.type)
}

// optional .rpc.Request.ResourceRequest resourceRequest = 2;
inline bool Request::has_resourcerequest() const {
  return rt_case() == kResourceRequest;
}
inline void Request::set_has_resourcerequest() {
  _oneof_case_[0] = kResourceRequest;
}
inline void Request::clear_resourcerequest() {
  if (has_resourcerequest()) {
    delete rt_.resourcerequest_;
    clear_has_rt();
  }
}
inline  const ::rpc::Request_ResourceRequest& Request::resourcerequest() const {
  // @@protoc_insertion_point(field_get:rpc.Request.resourceRequest)
  return has_resourcerequest()
      ? *rt_.resourcerequest_
      : ::rpc::Request_ResourceRequest::default_instance();
}
inline ::rpc::Request_ResourceRequest* Request::mutable_resourcerequest() {
  if (!has_resourcerequest()) {
    clear_rt();
    set_has_resourcerequest();
    rt_.resourcerequest_ = new ::rpc::Request_ResourceRequest;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Request.resourceRequest)
  return rt_.resourcerequest_;
}
inline ::rpc::Request_ResourceRequest* Request::release_resourcerequest() {
  // @@protoc_insertion_point(field_release:rpc.Request.resourceRequest)
  if (has_resourcerequest()) {
    clear_has_rt();
    ::rpc::Request_ResourceRequest* temp = rt_.resourcerequest_;
    rt_.resourcerequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_resourcerequest(::rpc::Request_ResourceRequest* resourcerequest) {
  clear_rt();
  if (resourcerequest) {
    set_has_resourcerequest();
    rt_.resourcerequest_ = resourcerequest;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.resourceRequest)
}

// optional .rpc.Request.DeleteRequest deleteRequest = 3;
inline bool Request::has_deleterequest() const {
  return rt_case() == kDeleteRequest;
}
inline void Request::set_has_deleterequest() {
  _oneof_case_[0] = kDeleteRequest;
}
inline void Request::clear_deleterequest() {
  if (has_deleterequest()) {
    delete rt_.deleterequest_;
    clear_has_rt();
  }
}
inline  const ::rpc::Request_DeleteRequest& Request::deleterequest() const {
  // @@protoc_insertion_point(field_get:rpc.Request.deleteRequest)
  return has_deleterequest()
      ? *rt_.deleterequest_
      : ::rpc::Request_DeleteRequest::default_instance();
}
inline ::rpc::Request_DeleteRequest* Request::mutable_deleterequest() {
  if (!has_deleterequest()) {
    clear_rt();
    set_has_deleterequest();
    rt_.deleterequest_ = new ::rpc::Request_DeleteRequest;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Request.deleteRequest)
  return rt_.deleterequest_;
}
inline ::rpc::Request_DeleteRequest* Request::release_deleterequest() {
  // @@protoc_insertion_point(field_release:rpc.Request.deleteRequest)
  if (has_deleterequest()) {
    clear_has_rt();
    ::rpc::Request_DeleteRequest* temp = rt_.deleterequest_;
    rt_.deleterequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_deleterequest(::rpc::Request_DeleteRequest* deleterequest) {
  clear_rt();
  if (deleterequest) {
    set_has_deleterequest();
    rt_.deleterequest_ = deleterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.deleteRequest)
}

// optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
inline bool Request::has_listjobsrequest() const {
  return rt_case() == kListJobsRequest;
}
inline void Request::set_has_listjobsrequest() {
  _oneof_case_[0] = kListJobsRequest;
}
inline void Request::clear_listjobsrequest() {
  if (has_listjobsrequest()) {
    delete rt_.listjobsrequest_;
    clear_has_rt();
  }
}
inline  const ::rpc::Request_ListJobsRequest& Request::listjobsrequest() const {
  // @@protoc_insertion_point(field_get:rpc.Request.listJobsRequest)
  return has_listjobsrequest()
      ? *rt_.listjobsrequest_
      : ::rpc::Request_ListJobsRequest::default_instance();
}
inline ::rpc::Request_ListJobsRequest* Request::mutable_listjobsrequest() {
  if (!has_listjobsrequest()) {
    clear_rt();
    set_has_listjobsrequest();
    rt_.listjobsrequest_ = new ::rpc::Request_ListJobsRequest;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Request.listJobsRequest)
  return rt_.listjobsrequest_;
}
inline ::rpc::Request_ListJobsRequest* Request::release_listjobsrequest() {
  // @@protoc_insertion_point(field_release:rpc.Request.listJobsRequest)
  if (has_listjobsrequest()) {
    clear_has_rt();
    ::rpc::Request_ListJobsRequest* temp = rt_.listjobsrequest_;
    rt_.listjobsrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_listjobsrequest(::rpc::Request_ListJobsRequest* listjobsrequest) {
  clear_rt();
  if (listjobsrequest) {
    set_has_listjobsrequest();
    rt_.listjobsrequest_ = listjobsrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.listJobsRequest)
}

inline bool Request::has_rt() const {
  return rt_case() != RT_NOT_SET;
}
inline void Request::clear_has_rt() {
  _oneof_case_[0] = RT_NOT_SET;
}
inline Request::RtCase Request::rt_case() const {
  return Request::RtCase(_oneof_case_[0]);
}
inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Error

// optional .rpc.Error.errorType error = 1;
inline void Error::clear_error() {
  error_ = 0;
}
inline ::rpc::Error_errorType Error::error() const {
  // @@protoc_insertion_point(field_get:rpc.Error.error)
  return static_cast< ::rpc::Error_errorType >(error_);
}
inline void Error::set_error(::rpc::Error_errorType value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:rpc.Error.error)
}

// optional string msg = 2;
inline void Error::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Error::msg() const {
  // @@protoc_insertion_point(field_get:rpc.Error.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Error.msg)
}
inline void Error::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Error.msg)
}
inline void Error::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Error.msg)
}
inline ::std::string* Error::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Error.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_msg() {
  // @@protoc_insertion_point(field_release:rpc.Error.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:rpc.Error.msg)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
// -------------------------------------------------------------------

// Reply

// optional int32 rc = 1;
inline void Reply::clear_rc() {
  rc_ = 0;
}
inline ::google::protobuf::int32 Reply::rc() const {
  // @@protoc_insertion_point(field_get:rpc.Reply.rc)
  return rc_;
}
inline void Reply::set_rc(::google::protobuf::int32 value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:rpc.Reply.rc)
}

// optional .rpc.Error error = 2;
inline bool Reply::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void Reply::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::rpc::Error& Reply::error() const {
  // @@protoc_insertion_point(field_get:rpc.Reply.error)
  return error_ != NULL ? *error_
                         : *::rpc::Error::internal_default_instance();
}
inline ::rpc::Error* Reply::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::rpc::Error;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Reply.error)
  return error_;
}
inline ::rpc::Error* Reply::release_error() {
  // @@protoc_insertion_point(field_release:rpc.Reply.error)
  
  ::rpc::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void Reply::set_allocated_error(::rpc::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Reply.error)
}

// optional string return_msg = 3;
inline void Reply::clear_return_msg() {
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Reply::return_msg() const {
  // @@protoc_insertion_point(field_get:rpc.Reply.return_msg)
  return return_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_return_msg(const ::std::string& value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Reply.return_msg)
}
inline void Reply::set_return_msg(const char* value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Reply.return_msg)
}
inline void Reply::set_return_msg(const char* value, size_t size) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Reply.return_msg)
}
inline ::std::string* Reply::mutable_return_msg() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Reply.return_msg)
  return return_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reply::release_return_msg() {
  // @@protoc_insertion_point(field_release:rpc.Reply.return_msg)
  
  return return_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_allocated_return_msg(::std::string* return_msg) {
  if (return_msg != NULL) {
    
  } else {
    
  }
  return_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_msg);
  // @@protoc_insertion_point(field_set_allocated:rpc.Reply.return_msg)
}

inline const Reply* Reply::internal_default_instance() {
  return &Reply_default_instance_.get();
}
// -------------------------------------------------------------------

// Message

// optional .rpc.Message.Type type = 1;
inline void Message::clear_type() {
  type_ = 0;
}
inline ::rpc::Message_Type Message::type() const {
  // @@protoc_insertion_point(field_get:rpc.Message.type)
  return static_cast< ::rpc::Message_Type >(type_);
}
inline void Message::set_type(::rpc::Message_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:rpc.Message.type)
}

// optional .rpc.Request request = 2;
inline bool Message::has_request() const {
  return rq_case() == kRequest;
}
inline void Message::set_has_request() {
  _oneof_case_[0] = kRequest;
}
inline void Message::clear_request() {
  if (has_request()) {
    delete rq_.request_;
    clear_has_rq();
  }
}
inline  const ::rpc::Request& Message::request() const {
  // @@protoc_insertion_point(field_get:rpc.Message.request)
  return has_request()
      ? *rq_.request_
      : ::rpc::Request::default_instance();
}
inline ::rpc::Request* Message::mutable_request() {
  if (!has_request()) {
    clear_rq();
    set_has_request();
    rq_.request_ = new ::rpc::Request;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Message.request)
  return rq_.request_;
}
inline ::rpc::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:rpc.Message.request)
  if (has_request()) {
    clear_has_rq();
    ::rpc::Request* temp = rq_.request_;
    rq_.request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_request(::rpc::Request* request) {
  clear_rq();
  if (request) {
    set_has_request();
    rq_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Message.request)
}

// optional .rpc.Reply reply = 3;
inline bool Message::has_reply() const {
  return rq_case() == kReply;
}
inline void Message::set_has_reply() {
  _oneof_case_[0] = kReply;
}
inline void Message::clear_reply() {
  if (has_reply()) {
    delete rq_.reply_;
    clear_has_rq();
  }
}
inline  const ::rpc::Reply& Message::reply() const {
  // @@protoc_insertion_point(field_get:rpc.Message.reply)
  return has_reply()
      ? *rq_.reply_
      : ::rpc::Reply::default_instance();
}
inline ::rpc::Reply* Message::mutable_reply() {
  if (!has_reply()) {
    clear_rq();
    set_has_reply();
    rq_.reply_ = new ::rpc::Reply;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Message.reply)
  return rq_.reply_;
}
inline ::rpc::Reply* Message::release_reply() {
  // @@protoc_insertion_point(field_release:rpc.Message.reply)
  if (has_reply()) {
    clear_has_rq();
    ::rpc::Reply* temp = rq_.reply_;
    rq_.reply_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_reply(::rpc::Reply* reply) {
  clear_rq();
  if (reply) {
    set_has_reply();
    rq_.reply_ = reply;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Message.reply)
}

inline bool Message::has_rq() const {
  return rq_case() != RQ_NOT_SET;
}
inline void Message::clear_has_rq() {
  _oneof_case_[0] = RQ_NOT_SET;
}
inline Message::RqCase Message::rq_case() const {
  return Message::RqCase(_oneof_case_[0]);
}
inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rpc::Request_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::Request_Type>() {
  return ::rpc::Request_Type_descriptor();
}
template <> struct is_proto_enum< ::rpc::Error_errorType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::Error_errorType>() {
  return ::rpc::Error_errorType_descriptor();
}
template <> struct is_proto_enum< ::rpc::Message_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::Message_Type>() {
  return ::rpc::Message_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
