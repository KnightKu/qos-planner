// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rpc {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
struct RequestOneofInstance {
  const ::rpc::Request_ResourceRequest* resourcerequest_;
  const ::rpc::Request_DeleteRequest* deleterequest_;
  const ::rpc::Request_ListJobsRequest* listjobsrequest_;
}* Request_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Request_DeleteRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_DeleteRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_ResourceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_ResourceRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_ResourceRequest_ResourceDefinition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_ResourceRequest_ResourceDefinition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_ListJobsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_ListJobsRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Error_errorType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reply_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
struct MessageOneofInstance {
  const ::rpc::Request* request_;
  const ::rpc::Reply* reply_;
}* Message_default_oneof_instance_ = NULL;
const ::google::protobuf::EnumDescriptor* Message_Type_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_message_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_message_2eproto() {
  protobuf_AddDesc_message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "message.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Request_default_oneof_instance_, resourcerequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Request_default_oneof_instance_, deleterequest_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Request_default_oneof_instance_, listjobsrequest_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, rt_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::internal_default_instance(),
      Request_offsets_,
      -1,
      -1,
      -1,
      Request_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _oneof_case_[0]),
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_));
  Request_DeleteRequest_descriptor_ = Request_descriptor_->nested_type(0);
  static const int Request_DeleteRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_DeleteRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_DeleteRequest, all_),
  };
  Request_DeleteRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_DeleteRequest_descriptor_,
      Request_DeleteRequest::internal_default_instance(),
      Request_DeleteRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(Request_DeleteRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_DeleteRequest, _internal_metadata_));
  Request_ResourceRequest_descriptor_ = Request_descriptor_->nested_type(1);
  static const int Request_ResourceRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest, requestedresources_),
  };
  Request_ResourceRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_ResourceRequest_descriptor_,
      Request_ResourceRequest::internal_default_instance(),
      Request_ResourceRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(Request_ResourceRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest, _internal_metadata_));
  Request_ResourceRequest_ResourceDefinition_descriptor_ = Request_ResourceRequest_descriptor_->nested_type(0);
  static const int Request_ResourceRequest_ResourceDefinition_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest_ResourceDefinition, file_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest_ResourceDefinition, throughputmb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest_ResourceDefinition, tstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest_ResourceDefinition, tstop_),
  };
  Request_ResourceRequest_ResourceDefinition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_ResourceRequest_ResourceDefinition_descriptor_,
      Request_ResourceRequest_ResourceDefinition::internal_default_instance(),
      Request_ResourceRequest_ResourceDefinition_offsets_,
      -1,
      -1,
      -1,
      sizeof(Request_ResourceRequest_ResourceDefinition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ResourceRequest_ResourceDefinition, _internal_metadata_));
  Request_ListJobsRequest_descriptor_ = Request_descriptor_->nested_type(2);
  static const int Request_ListJobsRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ListJobsRequest, regex_),
  };
  Request_ListJobsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_ListJobsRequest_descriptor_,
      Request_ListJobsRequest::internal_default_instance(),
      Request_ListJobsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(Request_ListJobsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request_ListJobsRequest, _internal_metadata_));
  Request_Type_descriptor_ = Request_descriptor_->enum_type(0);
  Error_descriptor_ = file->message_type(1);
  static const int Error_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, msg_),
  };
  Error_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error_descriptor_,
      Error::internal_default_instance(),
      Error_offsets_,
      -1,
      -1,
      -1,
      sizeof(Error),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_));
  Error_errorType_descriptor_ = Error_descriptor_->enum_type(0);
  Reply_descriptor_ = file->message_type(2);
  static const int Reply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, rc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, return_msg_),
  };
  Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Reply_descriptor_,
      Reply::internal_default_instance(),
      Reply_offsets_,
      -1,
      -1,
      -1,
      sizeof(Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _internal_metadata_));
  Message_descriptor_ = file->message_type(3);
  static const int Message_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Message_default_oneof_instance_, request_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Message_default_oneof_instance_, reply_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, rq_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::internal_default_instance(),
      Message_offsets_,
      -1,
      -1,
      -1,
      Message_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _oneof_case_[0]),
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_));
  Message_Type_descriptor_ = Message_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, Request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_DeleteRequest_descriptor_, Request_DeleteRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_ResourceRequest_descriptor_, Request_ResourceRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_ResourceRequest_ResourceDefinition_descriptor_, Request_ResourceRequest_ResourceDefinition::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_ListJobsRequest_descriptor_, Request_ListJobsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error_descriptor_, Error::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Reply_descriptor_, Reply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, Message::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_message_2eproto() {
  Request_default_instance_.Shutdown();
  delete Request_default_oneof_instance_;
  delete Request_reflection_;
  Request_DeleteRequest_default_instance_.Shutdown();
  delete Request_DeleteRequest_reflection_;
  Request_ResourceRequest_default_instance_.Shutdown();
  delete Request_ResourceRequest_reflection_;
  Request_ResourceRequest_ResourceDefinition_default_instance_.Shutdown();
  delete Request_ResourceRequest_ResourceDefinition_reflection_;
  Request_ListJobsRequest_default_instance_.Shutdown();
  delete Request_ListJobsRequest_reflection_;
  Error_default_instance_.Shutdown();
  delete Error_reflection_;
  Reply_default_instance_.Shutdown();
  delete Reply_reflection_;
  Message_default_instance_.Shutdown();
  delete Message_default_oneof_instance_;
  delete Message_reflection_;
}

void protobuf_InitDefaults_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  Request_default_instance_.DefaultConstruct();
  Request_default_oneof_instance_ = new RequestOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  Request_DeleteRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Request_ResourceRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Request_ResourceRequest_ResourceDefinition_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Request_ListJobsRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Error_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Reply_default_instance_.DefaultConstruct();
  Message_default_instance_.DefaultConstruct();
  Message_default_oneof_instance_ = new MessageOneofInstance();
  Request_default_instance_.get_mutable()->InitAsDefaultInstance();
  Request_DeleteRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  Request_ResourceRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  Request_ResourceRequest_ResourceDefinition_default_instance_.get_mutable()->InitAsDefaultInstance();
  Request_ListJobsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  Error_default_instance_.get_mutable()->InitAsDefaultInstance();
  Reply_default_instance_.get_mutable()->InitAsDefaultInstance();
  Message_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_message_2eproto_once_);
void protobuf_InitDefaults_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_message_2eproto_once_,
                 &protobuf_InitDefaults_message_2eproto_impl);
}
void protobuf_AddDesc_message_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_message_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rmessage.proto\022\003rpc\"\230\004\n\007Request\022\037\n\004type"
    "\030\001 \001(\0162\021.rpc.Request.Type\0227\n\017resourceReq"
    "uest\030\002 \001(\0132\034.rpc.Request.ResourceRequest"
    "H\000\0223\n\rdeleteRequest\030\003 \001(\0132\032.rpc.Request."
    "DeleteRequestH\000\0227\n\017listJobsRequest\030\004 \001(\013"
    "2\034.rpc.Request.ListJobsRequestH\000\032(\n\rDele"
    "teRequest\022\n\n\002ID\030\001 \003(\t\022\013\n\003all\030\002 \001(\010\032\303\001\n\017R"
    "esourceRequest\022\n\n\002ID\030\001 \001(\t\022K\n\022requestedR"
    "esources\030\002 \003(\0132/.rpc.Request.ResourceReq"
    "uest.ResourceDefinition\032W\n\022ResourceDefin"
    "ition\022\014\n\004file\030\001 \001(\t\022\024\n\014throughputMB\030\002 \001("
    "\005\022\016\n\006tstart\030\003 \001(\003\022\r\n\005tstop\030\004 \001(\003\032 \n\017List"
    "JobsRequest\022\r\n\005regex\030\001 \001(\t\"-\n\004Type\022\013\n\007RE"
    "SERVE\020\000\022\n\n\006DELETE\020\001\022\014\n\010LISTJOBS\020\002B\004\n\002rt\""
    "_\n\005Error\022#\n\005error\030\001 \001(\0162\024.rpc.Error.erro"
    "rType\022\013\n\003msg\030\002 \001(\t\"$\n\terrorType\022\t\n\005EARGS"
    "\020\000\022\014\n\010EUNKNOWN\020\001\"B\n\005Reply\022\n\n\002rc\030\001 \001(\005\022\031\n"
    "\005error\030\002 \001(\0132\n.rpc.Error\022\022\n\nreturn_msg\030\003"
    " \001(\t\"\216\001\n\007Message\022\037\n\004type\030\001 \001(\0162\021.rpc.Mes"
    "sage.Type\022\037\n\007request\030\002 \001(\0132\014.rpc.Request"
    "H\000\022\033\n\005reply\030\003 \001(\0132\n.rpc.ReplyH\000\"\036\n\004Type\022"
    "\013\n\007REQUEST\020\000\022\t\n\005REPLY\020\001B\004\n\002rqb\006proto3", 877);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_message_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_message_2eproto_once_);
void protobuf_AddDesc_message_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_message_2eproto_once_,
                 &protobuf_AddDesc_message_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_message_2eproto {
  StaticDescriptorInitializer_message_2eproto() {
    protobuf_AddDesc_message_2eproto();
  }
} static_descriptor_initializer_message_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_Type_descriptor_;
}
bool Request_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_Type Request::RESERVE;
const Request_Type Request::DELETE;
const Request_Type Request::LISTJOBS;
const Request_Type Request::Type_MIN;
const Request_Type Request::Type_MAX;
const int Request::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_DeleteRequest::kIDFieldNumber;
const int Request_DeleteRequest::kAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_DeleteRequest::Request_DeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Request.DeleteRequest)
}

void Request_DeleteRequest::InitAsDefaultInstance() {
}

Request_DeleteRequest::Request_DeleteRequest(const Request_DeleteRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Request.DeleteRequest)
}

void Request_DeleteRequest::SharedCtor() {
  all_ = false;
  _cached_size_ = 0;
}

Request_DeleteRequest::~Request_DeleteRequest() {
  // @@protoc_insertion_point(destructor:rpc.Request.DeleteRequest)
  SharedDtor();
}

void Request_DeleteRequest::SharedDtor() {
}

void Request_DeleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_DeleteRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_DeleteRequest_descriptor_;
}

const Request_DeleteRequest& Request_DeleteRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request_DeleteRequest> Request_DeleteRequest_default_instance_;

Request_DeleteRequest* Request_DeleteRequest::New(::google::protobuf::Arena* arena) const {
  Request_DeleteRequest* n = new Request_DeleteRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_DeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Request.DeleteRequest)
  all_ = false;
  id_.Clear();
}

bool Request_DeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Request.DeleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string ID = 1;
      case 1: {
        if (tag == 10) {
         parse_ID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id(this->id_size() - 1).data(),
            this->id(this->id_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.Request.DeleteRequest.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_ID;
        if (input->ExpectTag(16)) goto parse_all;
        break;
      }

      // optional bool all = 2;
      case 2: {
        if (tag == 16) {
         parse_all:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Request.DeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Request.DeleteRequest)
  return false;
#undef DO_
}

void Request_DeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Request.DeleteRequest)
  // repeated string ID = 1;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id(i).data(), this->id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.DeleteRequest.ID");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(i), output);
  }

  // optional bool all = 2;
  if (this->all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->all(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Request.DeleteRequest)
}

::google::protobuf::uint8* Request_DeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Request.DeleteRequest)
  // repeated string ID = 1;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id(i).data(), this->id(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.DeleteRequest.ID");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->id(i), target);
  }

  // optional bool all = 2;
  if (this->all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->all(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Request.DeleteRequest)
  return target;
}

size_t Request_DeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Request.DeleteRequest)
  size_t total_size = 0;

  // optional bool all = 2;
  if (this->all() != 0) {
    total_size += 1 + 1;
  }

  // repeated string ID = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->id_size());
  for (int i = 0; i < this->id_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->id(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_DeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Request.DeleteRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request_DeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_DeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Request.DeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Request.DeleteRequest)
    UnsafeMergeFrom(*source);
  }
}

void Request_DeleteRequest::MergeFrom(const Request_DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Request.DeleteRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request_DeleteRequest::UnsafeMergeFrom(const Request_DeleteRequest& from) {
  GOOGLE_DCHECK(&from != this);
  id_.UnsafeMergeFrom(from.id_);
  if (from.all() != 0) {
    set_all(from.all());
  }
}

void Request_DeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Request.DeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_DeleteRequest::CopyFrom(const Request_DeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Request.DeleteRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request_DeleteRequest::IsInitialized() const {

  return true;
}

void Request_DeleteRequest::Swap(Request_DeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_DeleteRequest::InternalSwap(Request_DeleteRequest* other) {
  id_.UnsafeArenaSwap(&other->id_);
  std::swap(all_, other->all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request_DeleteRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_DeleteRequest_descriptor_;
  metadata.reflection = Request_DeleteRequest_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_ResourceRequest_ResourceDefinition::kFileFieldNumber;
const int Request_ResourceRequest_ResourceDefinition::kThroughputMBFieldNumber;
const int Request_ResourceRequest_ResourceDefinition::kTstartFieldNumber;
const int Request_ResourceRequest_ResourceDefinition::kTstopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_ResourceRequest_ResourceDefinition::Request_ResourceRequest_ResourceDefinition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Request.ResourceRequest.ResourceDefinition)
}

void Request_ResourceRequest_ResourceDefinition::InitAsDefaultInstance() {
}

Request_ResourceRequest_ResourceDefinition::Request_ResourceRequest_ResourceDefinition(const Request_ResourceRequest_ResourceDefinition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Request.ResourceRequest.ResourceDefinition)
}

void Request_ResourceRequest_ResourceDefinition::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tstart_, 0, reinterpret_cast<char*>(&throughputmb_) -
    reinterpret_cast<char*>(&tstart_) + sizeof(throughputmb_));
  _cached_size_ = 0;
}

Request_ResourceRequest_ResourceDefinition::~Request_ResourceRequest_ResourceDefinition() {
  // @@protoc_insertion_point(destructor:rpc.Request.ResourceRequest.ResourceDefinition)
  SharedDtor();
}

void Request_ResourceRequest_ResourceDefinition::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_ResourceRequest_ResourceDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_ResourceRequest_ResourceDefinition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_ResourceRequest_ResourceDefinition_descriptor_;
}

const Request_ResourceRequest_ResourceDefinition& Request_ResourceRequest_ResourceDefinition::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request_ResourceRequest_ResourceDefinition> Request_ResourceRequest_ResourceDefinition_default_instance_;

Request_ResourceRequest_ResourceDefinition* Request_ResourceRequest_ResourceDefinition::New(::google::protobuf::Arena* arena) const {
  Request_ResourceRequest_ResourceDefinition* n = new Request_ResourceRequest_ResourceDefinition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_ResourceRequest_ResourceDefinition::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Request.ResourceRequest.ResourceDefinition)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Request_ResourceRequest_ResourceDefinition, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request_ResourceRequest_ResourceDefinition*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(tstart_, throughputmb_);
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Request_ResourceRequest_ResourceDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Request.ResourceRequest.ResourceDefinition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.Request.ResourceRequest.ResourceDefinition.file"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_throughputMB;
        break;
      }

      // optional int32 throughputMB = 2;
      case 2: {
        if (tag == 16) {
         parse_throughputMB:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &throughputmb_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_tstart;
        break;
      }

      // optional int64 tstart = 3;
      case 3: {
        if (tag == 24) {
         parse_tstart:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tstart_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tstop;
        break;
      }

      // optional int64 tstop = 4;
      case 4: {
        if (tag == 32) {
         parse_tstop:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tstop_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Request.ResourceRequest.ResourceDefinition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Request.ResourceRequest.ResourceDefinition)
  return false;
#undef DO_
}

void Request_ResourceRequest_ResourceDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Request.ResourceRequest.ResourceDefinition)
  // optional string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.ResourceRequest.ResourceDefinition.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // optional int32 throughputMB = 2;
  if (this->throughputmb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->throughputmb(), output);
  }

  // optional int64 tstart = 3;
  if (this->tstart() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->tstart(), output);
  }

  // optional int64 tstop = 4;
  if (this->tstop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->tstop(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Request.ResourceRequest.ResourceDefinition)
}

::google::protobuf::uint8* Request_ResourceRequest_ResourceDefinition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Request.ResourceRequest.ResourceDefinition)
  // optional string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.ResourceRequest.ResourceDefinition.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // optional int32 throughputMB = 2;
  if (this->throughputmb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->throughputmb(), target);
  }

  // optional int64 tstart = 3;
  if (this->tstart() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->tstart(), target);
  }

  // optional int64 tstop = 4;
  if (this->tstop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->tstop(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Request.ResourceRequest.ResourceDefinition)
  return target;
}

size_t Request_ResourceRequest_ResourceDefinition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Request.ResourceRequest.ResourceDefinition)
  size_t total_size = 0;

  // optional string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // optional int32 throughputMB = 2;
  if (this->throughputmb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->throughputmb());
  }

  // optional int64 tstart = 3;
  if (this->tstart() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tstart());
  }

  // optional int64 tstop = 4;
  if (this->tstop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tstop());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_ResourceRequest_ResourceDefinition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Request.ResourceRequest.ResourceDefinition)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request_ResourceRequest_ResourceDefinition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_ResourceRequest_ResourceDefinition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Request.ResourceRequest.ResourceDefinition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Request.ResourceRequest.ResourceDefinition)
    UnsafeMergeFrom(*source);
  }
}

void Request_ResourceRequest_ResourceDefinition::MergeFrom(const Request_ResourceRequest_ResourceDefinition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Request.ResourceRequest.ResourceDefinition)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request_ResourceRequest_ResourceDefinition::UnsafeMergeFrom(const Request_ResourceRequest_ResourceDefinition& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.throughputmb() != 0) {
    set_throughputmb(from.throughputmb());
  }
  if (from.tstart() != 0) {
    set_tstart(from.tstart());
  }
  if (from.tstop() != 0) {
    set_tstop(from.tstop());
  }
}

void Request_ResourceRequest_ResourceDefinition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Request.ResourceRequest.ResourceDefinition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_ResourceRequest_ResourceDefinition::CopyFrom(const Request_ResourceRequest_ResourceDefinition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Request.ResourceRequest.ResourceDefinition)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request_ResourceRequest_ResourceDefinition::IsInitialized() const {

  return true;
}

void Request_ResourceRequest_ResourceDefinition::Swap(Request_ResourceRequest_ResourceDefinition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_ResourceRequest_ResourceDefinition::InternalSwap(Request_ResourceRequest_ResourceDefinition* other) {
  file_.Swap(&other->file_);
  std::swap(throughputmb_, other->throughputmb_);
  std::swap(tstart_, other->tstart_);
  std::swap(tstop_, other->tstop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request_ResourceRequest_ResourceDefinition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_ResourceRequest_ResourceDefinition_descriptor_;
  metadata.reflection = Request_ResourceRequest_ResourceDefinition_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_ResourceRequest::kIDFieldNumber;
const int Request_ResourceRequest::kRequestedResourcesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_ResourceRequest::Request_ResourceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Request.ResourceRequest)
}

void Request_ResourceRequest::InitAsDefaultInstance() {
}

Request_ResourceRequest::Request_ResourceRequest(const Request_ResourceRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Request.ResourceRequest)
}

void Request_ResourceRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Request_ResourceRequest::~Request_ResourceRequest() {
  // @@protoc_insertion_point(destructor:rpc.Request.ResourceRequest)
  SharedDtor();
}

void Request_ResourceRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_ResourceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_ResourceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_ResourceRequest_descriptor_;
}

const Request_ResourceRequest& Request_ResourceRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request_ResourceRequest> Request_ResourceRequest_default_instance_;

Request_ResourceRequest* Request_ResourceRequest::New(::google::protobuf::Arena* arena) const {
  Request_ResourceRequest* n = new Request_ResourceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_ResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Request.ResourceRequest)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestedresources_.Clear();
}

bool Request_ResourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Request.ResourceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ID = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.Request.ResourceRequest.ID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_requestedResources;
        break;
      }

      // repeated .rpc.Request.ResourceRequest.ResourceDefinition requestedResources = 2;
      case 2: {
        if (tag == 18) {
         parse_requestedResources:
          DO_(input->IncrementRecursionDepth());
         parse_loop_requestedResources:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_requestedresources()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_requestedResources;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Request.ResourceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Request.ResourceRequest)
  return false;
#undef DO_
}

void Request_ResourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Request.ResourceRequest)
  // optional string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.ResourceRequest.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated .rpc.Request.ResourceRequest.ResourceDefinition requestedResources = 2;
  for (unsigned int i = 0, n = this->requestedresources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->requestedresources(i), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Request.ResourceRequest)
}

::google::protobuf::uint8* Request_ResourceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Request.ResourceRequest)
  // optional string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.ResourceRequest.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated .rpc.Request.ResourceRequest.ResourceDefinition requestedResources = 2;
  for (unsigned int i = 0, n = this->requestedresources_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->requestedresources(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Request.ResourceRequest)
  return target;
}

size_t Request_ResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Request.ResourceRequest)
  size_t total_size = 0;

  // optional string ID = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // repeated .rpc.Request.ResourceRequest.ResourceDefinition requestedResources = 2;
  {
    unsigned int count = this->requestedresources_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->requestedresources(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_ResourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Request.ResourceRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request_ResourceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_ResourceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Request.ResourceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Request.ResourceRequest)
    UnsafeMergeFrom(*source);
  }
}

void Request_ResourceRequest::MergeFrom(const Request_ResourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Request.ResourceRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request_ResourceRequest::UnsafeMergeFrom(const Request_ResourceRequest& from) {
  GOOGLE_DCHECK(&from != this);
  requestedresources_.MergeFrom(from.requestedresources_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Request_ResourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Request.ResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_ResourceRequest::CopyFrom(const Request_ResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Request.ResourceRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request_ResourceRequest::IsInitialized() const {

  return true;
}

void Request_ResourceRequest::Swap(Request_ResourceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_ResourceRequest::InternalSwap(Request_ResourceRequest* other) {
  id_.Swap(&other->id_);
  requestedresources_.UnsafeArenaSwap(&other->requestedresources_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request_ResourceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_ResourceRequest_descriptor_;
  metadata.reflection = Request_ResourceRequest_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request_ListJobsRequest::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request_ListJobsRequest::Request_ListJobsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Request.ListJobsRequest)
}

void Request_ListJobsRequest::InitAsDefaultInstance() {
}

Request_ListJobsRequest::Request_ListJobsRequest(const Request_ListJobsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Request.ListJobsRequest)
}

void Request_ListJobsRequest::SharedCtor() {
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Request_ListJobsRequest::~Request_ListJobsRequest() {
  // @@protoc_insertion_point(destructor:rpc.Request.ListJobsRequest)
  SharedDtor();
}

void Request_ListJobsRequest::SharedDtor() {
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request_ListJobsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request_ListJobsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_ListJobsRequest_descriptor_;
}

const Request_ListJobsRequest& Request_ListJobsRequest::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request_ListJobsRequest> Request_ListJobsRequest_default_instance_;

Request_ListJobsRequest* Request_ListJobsRequest::New(::google::protobuf::Arena* arena) const {
  Request_ListJobsRequest* n = new Request_ListJobsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request_ListJobsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Request.ListJobsRequest)
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request_ListJobsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Request.ListJobsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string regex = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), this->regex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.Request.ListJobsRequest.regex"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Request.ListJobsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Request.ListJobsRequest)
  return false;
#undef DO_
}

void Request_ListJobsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Request.ListJobsRequest)
  // optional string regex = 1;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.ListJobsRequest.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->regex(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Request.ListJobsRequest)
}

::google::protobuf::uint8* Request_ListJobsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Request.ListJobsRequest)
  // optional string regex = 1;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), this->regex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Request.ListJobsRequest.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->regex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Request.ListJobsRequest)
  return target;
}

size_t Request_ListJobsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Request.ListJobsRequest)
  size_t total_size = 0;

  // optional string regex = 1;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request_ListJobsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Request.ListJobsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request_ListJobsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request_ListJobsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Request.ListJobsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Request.ListJobsRequest)
    UnsafeMergeFrom(*source);
  }
}

void Request_ListJobsRequest::MergeFrom(const Request_ListJobsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Request.ListJobsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request_ListJobsRequest::UnsafeMergeFrom(const Request_ListJobsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.regex().size() > 0) {

    regex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex_);
  }
}

void Request_ListJobsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Request.ListJobsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request_ListJobsRequest::CopyFrom(const Request_ListJobsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Request.ListJobsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request_ListJobsRequest::IsInitialized() const {

  return true;
}

void Request_ListJobsRequest::Swap(Request_ListJobsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request_ListJobsRequest::InternalSwap(Request_ListJobsRequest* other) {
  regex_.Swap(&other->regex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request_ListJobsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_ListJobsRequest_descriptor_;
  metadata.reflection = Request_ListJobsRequest_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kTypeFieldNumber;
const int Request::kResourceRequestFieldNumber;
const int Request::kDeleteRequestFieldNumber;
const int Request::kListJobsRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Request)
}

void Request::InitAsDefaultInstance() {
  Request_default_oneof_instance_->resourcerequest_ = const_cast< ::rpc::Request_ResourceRequest*>(
      ::rpc::Request_ResourceRequest::internal_default_instance());
  Request_default_oneof_instance_->deleterequest_ = const_cast< ::rpc::Request_DeleteRequest*>(
      ::rpc::Request_DeleteRequest::internal_default_instance());
  Request_default_oneof_instance_->listjobsrequest_ = const_cast< ::rpc::Request_ListJobsRequest*>(
      ::rpc::Request_ListJobsRequest::internal_default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Request)
}

void Request::SharedCtor() {
  type_ = 0;
  clear_has_rt();
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:rpc.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (has_rt()) {
    clear_rt();
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::clear_rt() {
// @@protoc_insertion_point(one_of_clear_start:rpc.Request)
  switch (rt_case()) {
    case kResourceRequest: {
      delete rt_.resourcerequest_;
      break;
    }
    case kDeleteRequest: {
      delete rt_.deleterequest_;
      break;
    }
    case kListJobsRequest: {
      delete rt_.listjobsrequest_;
      break;
    }
    case RT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RT_NOT_SET;
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Request)
  type_ = 0;
  clear_rt();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .rpc.Request.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rpc::Request_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resourceRequest;
        break;
      }

      // optional .rpc.Request.ResourceRequest resourceRequest = 2;
      case 2: {
        if (tag == 18) {
         parse_resourceRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resourcerequest()));
        } else {
          goto handle_unusual;
        }
        goto after_listjobsrequest;
        break;
      }

      // optional .rpc.Request.DeleteRequest deleteRequest = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleterequest()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_listJobsRequest;
        break;
      }

      // optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
      case 4: {
        if (tag == 34) {
         parse_listJobsRequest:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_listjobsrequest()));
        } else {
          goto handle_unusual;
        }
       after_listjobsrequest:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Request)
  // optional .rpc.Request.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .rpc.Request.ResourceRequest resourceRequest = 2;
  if (has_resourcerequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *rt_.resourcerequest_, output);
  }

  // optional .rpc.Request.DeleteRequest deleteRequest = 3;
  if (has_deleterequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *rt_.deleterequest_, output);
  }

  // optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
  if (has_listjobsrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *rt_.listjobsrequest_, output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Request)
  // optional .rpc.Request.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .rpc.Request.ResourceRequest resourceRequest = 2;
  if (has_resourcerequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *rt_.resourcerequest_, false, target);
  }

  // optional .rpc.Request.DeleteRequest deleteRequest = 3;
  if (has_deleterequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *rt_.deleterequest_, false, target);
  }

  // optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
  if (has_listjobsrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *rt_.listjobsrequest_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Request)
  size_t total_size = 0;

  // optional .rpc.Request.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (rt_case()) {
    // optional .rpc.Request.ResourceRequest resourceRequest = 2;
    case kResourceRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *rt_.resourcerequest_);
      break;
    }
    // optional .rpc.Request.DeleteRequest deleteRequest = 3;
    case kDeleteRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *rt_.deleterequest_);
      break;
    }
    // optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
    case kListJobsRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *rt_.listjobsrequest_);
      break;
    }
    case RT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Request)
    UnsafeMergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request::UnsafeMergeFrom(const Request& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.rt_case()) {
    case kResourceRequest: {
      mutable_resourcerequest()->::rpc::Request_ResourceRequest::MergeFrom(from.resourcerequest());
      break;
    }
    case kDeleteRequest: {
      mutable_deleterequest()->::rpc::Request_DeleteRequest::MergeFrom(from.deleterequest());
      break;
    }
    case kListJobsRequest: {
      mutable_listjobsrequest()->::rpc::Request_ListJobsRequest::MergeFrom(from.listjobsrequest());
      break;
    }
    case RT_NOT_SET: {
      break;
    }
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request::IsInitialized() const {

  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(type_, other->type_);
  std::swap(rt_, other->rt_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_DeleteRequest

// repeated string ID = 1;
int Request_DeleteRequest::id_size() const {
  return id_.size();
}
void Request_DeleteRequest::clear_id() {
  id_.Clear();
}
const ::std::string& Request_DeleteRequest::id(int index) const {
  // @@protoc_insertion_point(field_get:rpc.Request.DeleteRequest.ID)
  return id_.Get(index);
}
::std::string* Request_DeleteRequest::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.Request.DeleteRequest.ID)
  return id_.Mutable(index);
}
void Request_DeleteRequest::set_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rpc.Request.DeleteRequest.ID)
  id_.Mutable(index)->assign(value);
}
void Request_DeleteRequest::set_id(int index, const char* value) {
  id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Request.DeleteRequest.ID)
}
void Request_DeleteRequest::set_id(int index, const char* value, size_t size) {
  id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.DeleteRequest.ID)
}
::std::string* Request_DeleteRequest::add_id() {
  // @@protoc_insertion_point(field_add_mutable:rpc.Request.DeleteRequest.ID)
  return id_.Add();
}
void Request_DeleteRequest::add_id(const ::std::string& value) {
  id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rpc.Request.DeleteRequest.ID)
}
void Request_DeleteRequest::add_id(const char* value) {
  id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rpc.Request.DeleteRequest.ID)
}
void Request_DeleteRequest::add_id(const char* value, size_t size) {
  id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rpc.Request.DeleteRequest.ID)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Request_DeleteRequest::id() const {
  // @@protoc_insertion_point(field_list:rpc.Request.DeleteRequest.ID)
  return id_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Request_DeleteRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:rpc.Request.DeleteRequest.ID)
  return &id_;
}

// optional bool all = 2;
void Request_DeleteRequest::clear_all() {
  all_ = false;
}
bool Request_DeleteRequest::all() const {
  // @@protoc_insertion_point(field_get:rpc.Request.DeleteRequest.all)
  return all_;
}
void Request_DeleteRequest::set_all(bool value) {
  
  all_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.DeleteRequest.all)
}

inline const Request_DeleteRequest* Request_DeleteRequest::internal_default_instance() {
  return &Request_DeleteRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Request_ResourceRequest_ResourceDefinition

// optional string file = 1;
void Request_ResourceRequest_ResourceDefinition::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Request_ResourceRequest_ResourceDefinition::file() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.ResourceDefinition.file)
  return file_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request_ResourceRequest_ResourceDefinition::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.ResourceDefinition.file)
}
void Request_ResourceRequest_ResourceDefinition::set_file(const char* value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Request.ResourceRequest.ResourceDefinition.file)
}
void Request_ResourceRequest_ResourceDefinition::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.ResourceRequest.ResourceDefinition.file)
}
::std::string* Request_ResourceRequest_ResourceDefinition::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Request.ResourceRequest.ResourceDefinition.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request_ResourceRequest_ResourceDefinition::release_file() {
  // @@protoc_insertion_point(field_release:rpc.Request.ResourceRequest.ResourceDefinition.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request_ResourceRequest_ResourceDefinition::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.ResourceRequest.ResourceDefinition.file)
}

// optional int32 throughputMB = 2;
void Request_ResourceRequest_ResourceDefinition::clear_throughputmb() {
  throughputmb_ = 0;
}
::google::protobuf::int32 Request_ResourceRequest_ResourceDefinition::throughputmb() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.ResourceDefinition.throughputMB)
  return throughputmb_;
}
void Request_ResourceRequest_ResourceDefinition::set_throughputmb(::google::protobuf::int32 value) {
  
  throughputmb_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.ResourceDefinition.throughputMB)
}

// optional int64 tstart = 3;
void Request_ResourceRequest_ResourceDefinition::clear_tstart() {
  tstart_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Request_ResourceRequest_ResourceDefinition::tstart() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.ResourceDefinition.tstart)
  return tstart_;
}
void Request_ResourceRequest_ResourceDefinition::set_tstart(::google::protobuf::int64 value) {
  
  tstart_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.ResourceDefinition.tstart)
}

// optional int64 tstop = 4;
void Request_ResourceRequest_ResourceDefinition::clear_tstop() {
  tstop_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Request_ResourceRequest_ResourceDefinition::tstop() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.ResourceDefinition.tstop)
  return tstop_;
}
void Request_ResourceRequest_ResourceDefinition::set_tstop(::google::protobuf::int64 value) {
  
  tstop_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.ResourceDefinition.tstop)
}

inline const Request_ResourceRequest_ResourceDefinition* Request_ResourceRequest_ResourceDefinition::internal_default_instance() {
  return &Request_ResourceRequest_ResourceDefinition_default_instance_.get();
}
// -------------------------------------------------------------------

// Request_ResourceRequest

// optional string ID = 1;
void Request_ResourceRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Request_ResourceRequest::id() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.ID)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request_ResourceRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Request.ResourceRequest.ID)
}
void Request_ResourceRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Request.ResourceRequest.ID)
}
void Request_ResourceRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.ResourceRequest.ID)
}
::std::string* Request_ResourceRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Request.ResourceRequest.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request_ResourceRequest::release_id() {
  // @@protoc_insertion_point(field_release:rpc.Request.ResourceRequest.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request_ResourceRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.ResourceRequest.ID)
}

// repeated .rpc.Request.ResourceRequest.ResourceDefinition requestedResources = 2;
int Request_ResourceRequest::requestedresources_size() const {
  return requestedresources_.size();
}
void Request_ResourceRequest::clear_requestedresources() {
  requestedresources_.Clear();
}
const ::rpc::Request_ResourceRequest_ResourceDefinition& Request_ResourceRequest::requestedresources(int index) const {
  // @@protoc_insertion_point(field_get:rpc.Request.ResourceRequest.requestedResources)
  return requestedresources_.Get(index);
}
::rpc::Request_ResourceRequest_ResourceDefinition* Request_ResourceRequest::mutable_requestedresources(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.Request.ResourceRequest.requestedResources)
  return requestedresources_.Mutable(index);
}
::rpc::Request_ResourceRequest_ResourceDefinition* Request_ResourceRequest::add_requestedresources() {
  // @@protoc_insertion_point(field_add:rpc.Request.ResourceRequest.requestedResources)
  return requestedresources_.Add();
}
::google::protobuf::RepeatedPtrField< ::rpc::Request_ResourceRequest_ResourceDefinition >*
Request_ResourceRequest::mutable_requestedresources() {
  // @@protoc_insertion_point(field_mutable_list:rpc.Request.ResourceRequest.requestedResources)
  return &requestedresources_;
}
const ::google::protobuf::RepeatedPtrField< ::rpc::Request_ResourceRequest_ResourceDefinition >&
Request_ResourceRequest::requestedresources() const {
  // @@protoc_insertion_point(field_list:rpc.Request.ResourceRequest.requestedResources)
  return requestedresources_;
}

inline const Request_ResourceRequest* Request_ResourceRequest::internal_default_instance() {
  return &Request_ResourceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Request_ListJobsRequest

// optional string regex = 1;
void Request_ListJobsRequest::clear_regex() {
  regex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Request_ListJobsRequest::regex() const {
  // @@protoc_insertion_point(field_get:rpc.Request.ListJobsRequest.regex)
  return regex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request_ListJobsRequest::set_regex(const ::std::string& value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Request.ListJobsRequest.regex)
}
void Request_ListJobsRequest::set_regex(const char* value) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Request.ListJobsRequest.regex)
}
void Request_ListJobsRequest::set_regex(const char* value, size_t size) {
  
  regex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Request.ListJobsRequest.regex)
}
::std::string* Request_ListJobsRequest::mutable_regex() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Request.ListJobsRequest.regex)
  return regex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request_ListJobsRequest::release_regex() {
  // @@protoc_insertion_point(field_release:rpc.Request.ListJobsRequest.regex)
  
  return regex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request_ListJobsRequest::set_allocated_regex(::std::string* regex) {
  if (regex != NULL) {
    
  } else {
    
  }
  regex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), regex);
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.ListJobsRequest.regex)
}

inline const Request_ListJobsRequest* Request_ListJobsRequest::internal_default_instance() {
  return &Request_ListJobsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional .rpc.Request.Type type = 1;
void Request::clear_type() {
  type_ = 0;
}
::rpc::Request_Type Request::type() const {
  // @@protoc_insertion_point(field_get:rpc.Request.type)
  return static_cast< ::rpc::Request_Type >(type_);
}
void Request::set_type(::rpc::Request_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:rpc.Request.type)
}

// optional .rpc.Request.ResourceRequest resourceRequest = 2;
bool Request::has_resourcerequest() const {
  return rt_case() == kResourceRequest;
}
void Request::set_has_resourcerequest() {
  _oneof_case_[0] = kResourceRequest;
}
void Request::clear_resourcerequest() {
  if (has_resourcerequest()) {
    delete rt_.resourcerequest_;
    clear_has_rt();
  }
}
 const ::rpc::Request_ResourceRequest& Request::resourcerequest() const {
  // @@protoc_insertion_point(field_get:rpc.Request.resourceRequest)
  return has_resourcerequest()
      ? *rt_.resourcerequest_
      : ::rpc::Request_ResourceRequest::default_instance();
}
::rpc::Request_ResourceRequest* Request::mutable_resourcerequest() {
  if (!has_resourcerequest()) {
    clear_rt();
    set_has_resourcerequest();
    rt_.resourcerequest_ = new ::rpc::Request_ResourceRequest;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Request.resourceRequest)
  return rt_.resourcerequest_;
}
::rpc::Request_ResourceRequest* Request::release_resourcerequest() {
  // @@protoc_insertion_point(field_release:rpc.Request.resourceRequest)
  if (has_resourcerequest()) {
    clear_has_rt();
    ::rpc::Request_ResourceRequest* temp = rt_.resourcerequest_;
    rt_.resourcerequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Request::set_allocated_resourcerequest(::rpc::Request_ResourceRequest* resourcerequest) {
  clear_rt();
  if (resourcerequest) {
    set_has_resourcerequest();
    rt_.resourcerequest_ = resourcerequest;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.resourceRequest)
}

// optional .rpc.Request.DeleteRequest deleteRequest = 3;
bool Request::has_deleterequest() const {
  return rt_case() == kDeleteRequest;
}
void Request::set_has_deleterequest() {
  _oneof_case_[0] = kDeleteRequest;
}
void Request::clear_deleterequest() {
  if (has_deleterequest()) {
    delete rt_.deleterequest_;
    clear_has_rt();
  }
}
 const ::rpc::Request_DeleteRequest& Request::deleterequest() const {
  // @@protoc_insertion_point(field_get:rpc.Request.deleteRequest)
  return has_deleterequest()
      ? *rt_.deleterequest_
      : ::rpc::Request_DeleteRequest::default_instance();
}
::rpc::Request_DeleteRequest* Request::mutable_deleterequest() {
  if (!has_deleterequest()) {
    clear_rt();
    set_has_deleterequest();
    rt_.deleterequest_ = new ::rpc::Request_DeleteRequest;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Request.deleteRequest)
  return rt_.deleterequest_;
}
::rpc::Request_DeleteRequest* Request::release_deleterequest() {
  // @@protoc_insertion_point(field_release:rpc.Request.deleteRequest)
  if (has_deleterequest()) {
    clear_has_rt();
    ::rpc::Request_DeleteRequest* temp = rt_.deleterequest_;
    rt_.deleterequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Request::set_allocated_deleterequest(::rpc::Request_DeleteRequest* deleterequest) {
  clear_rt();
  if (deleterequest) {
    set_has_deleterequest();
    rt_.deleterequest_ = deleterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.deleteRequest)
}

// optional .rpc.Request.ListJobsRequest listJobsRequest = 4;
bool Request::has_listjobsrequest() const {
  return rt_case() == kListJobsRequest;
}
void Request::set_has_listjobsrequest() {
  _oneof_case_[0] = kListJobsRequest;
}
void Request::clear_listjobsrequest() {
  if (has_listjobsrequest()) {
    delete rt_.listjobsrequest_;
    clear_has_rt();
  }
}
 const ::rpc::Request_ListJobsRequest& Request::listjobsrequest() const {
  // @@protoc_insertion_point(field_get:rpc.Request.listJobsRequest)
  return has_listjobsrequest()
      ? *rt_.listjobsrequest_
      : ::rpc::Request_ListJobsRequest::default_instance();
}
::rpc::Request_ListJobsRequest* Request::mutable_listjobsrequest() {
  if (!has_listjobsrequest()) {
    clear_rt();
    set_has_listjobsrequest();
    rt_.listjobsrequest_ = new ::rpc::Request_ListJobsRequest;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Request.listJobsRequest)
  return rt_.listjobsrequest_;
}
::rpc::Request_ListJobsRequest* Request::release_listjobsrequest() {
  // @@protoc_insertion_point(field_release:rpc.Request.listJobsRequest)
  if (has_listjobsrequest()) {
    clear_has_rt();
    ::rpc::Request_ListJobsRequest* temp = rt_.listjobsrequest_;
    rt_.listjobsrequest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Request::set_allocated_listjobsrequest(::rpc::Request_ListJobsRequest* listjobsrequest) {
  clear_rt();
  if (listjobsrequest) {
    set_has_listjobsrequest();
    rt_.listjobsrequest_ = listjobsrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Request.listJobsRequest)
}

bool Request::has_rt() const {
  return rt_case() != RT_NOT_SET;
}
void Request::clear_has_rt() {
  _oneof_case_[0] = RT_NOT_SET;
}
Request::RtCase Request::rt_case() const {
  return Request::RtCase(_oneof_case_[0]);
}
inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Error_errorType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_errorType_descriptor_;
}
bool Error_errorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Error_errorType Error::EARGS;
const Error_errorType Error::EUNKNOWN;
const Error_errorType Error::errorType_MIN;
const Error_errorType Error::errorType_MAX;
const int Error::errorType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kErrorFieldNumber;
const int Error::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Error)
}

void Error::InitAsDefaultInstance() {
}

Error::Error(const Error& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Error)
}

void Error::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = 0;
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:rpc.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Error)
  error_ = 0;
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .rpc.Error.errorType error = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error(static_cast< ::rpc::Error_errorType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_msg;
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (tag == 18) {
         parse_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.Error.msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Error)
  // optional .rpc.Error.errorType error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error(), output);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Error.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Error)
  // optional .rpc.Error.errorType error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error(), target);
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Error.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Error)
  size_t total_size = 0;

  // optional .rpc.Error.errorType error = 1;
  if (this->error() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
  }

  // optional string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Error)
    UnsafeMergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Error)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Error::UnsafeMergeFrom(const Error& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.error() != 0) {
    set_error(from.error());
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Error)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Error::IsInitialized() const {

  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  std::swap(error_, other->error_);
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_descriptor_;
  metadata.reflection = Error_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// optional .rpc.Error.errorType error = 1;
void Error::clear_error() {
  error_ = 0;
}
::rpc::Error_errorType Error::error() const {
  // @@protoc_insertion_point(field_get:rpc.Error.error)
  return static_cast< ::rpc::Error_errorType >(error_);
}
void Error::set_error(::rpc::Error_errorType value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:rpc.Error.error)
}

// optional string msg = 2;
void Error::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Error::msg() const {
  // @@protoc_insertion_point(field_get:rpc.Error.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Error.msg)
}
void Error::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Error.msg)
}
void Error::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Error.msg)
}
::std::string* Error::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Error.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Error::release_msg() {
  // @@protoc_insertion_point(field_release:rpc.Error.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:rpc.Error.msg)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kRcFieldNumber;
const int Reply::kErrorFieldNumber;
const int Reply::kReturnMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Reply)
}

void Reply::InitAsDefaultInstance() {
  error_ = const_cast< ::rpc::Error*>(
      ::rpc::Error::internal_default_instance());
}

Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Reply)
}

void Reply::SharedCtor() {
  return_msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  rc_ = 0;
  _cached_size_ = 0;
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:rpc.Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  return_msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Reply_default_instance_.get()) {
    delete error_;
  }
}

void Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reply_descriptor_;
}

const Reply& Reply::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Reply> Reply_default_instance_;

Reply* Reply::New(::google::protobuf::Arena* arena) const {
  Reply* n = new Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Reply)
  rc_ = 0;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 rc = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rc_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .rpc.Error error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_return_msg;
        break;
      }

      // optional string return_msg = 3;
      case 3: {
        if (tag == 26) {
         parse_return_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_return_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->return_msg().data(), this->return_msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.Reply.return_msg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Reply)
  // optional int32 rc = 1;
  if (this->rc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rc(), output);
  }

  // optional .rpc.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // optional string return_msg = 3;
  if (this->return_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_msg().data(), this->return_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Reply.return_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->return_msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Reply)
}

::google::protobuf::uint8* Reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Reply)
  // optional int32 rc = 1;
  if (this->rc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rc(), target);
  }

  // optional .rpc.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // optional string return_msg = 3;
  if (this->return_msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->return_msg().data(), this->return_msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.Reply.return_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->return_msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Reply)
  return target;
}

size_t Reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Reply)
  size_t total_size = 0;

  // optional int32 rc = 1;
  if (this->rc() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rc());
  }

  // optional .rpc.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // optional string return_msg = 3;
  if (this->return_msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->return_msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Reply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Reply)
    UnsafeMergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Reply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Reply::UnsafeMergeFrom(const Reply& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.rc() != 0) {
    set_rc(from.rc());
  }
  if (from.has_error()) {
    mutable_error()->::rpc::Error::MergeFrom(from.error());
  }
  if (from.return_msg().size() > 0) {

    return_msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.return_msg_);
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Reply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Reply::IsInitialized() const {

  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  std::swap(rc_, other->rc_);
  std::swap(error_, other->error_);
  return_msg_.Swap(&other->return_msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reply_descriptor_;
  metadata.reflection = Reply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reply

// optional int32 rc = 1;
void Reply::clear_rc() {
  rc_ = 0;
}
::google::protobuf::int32 Reply::rc() const {
  // @@protoc_insertion_point(field_get:rpc.Reply.rc)
  return rc_;
}
void Reply::set_rc(::google::protobuf::int32 value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:rpc.Reply.rc)
}

// optional .rpc.Error error = 2;
bool Reply::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void Reply::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::rpc::Error& Reply::error() const {
  // @@protoc_insertion_point(field_get:rpc.Reply.error)
  return error_ != NULL ? *error_
                         : *::rpc::Error::internal_default_instance();
}
::rpc::Error* Reply::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::rpc::Error;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Reply.error)
  return error_;
}
::rpc::Error* Reply::release_error() {
  // @@protoc_insertion_point(field_release:rpc.Reply.error)
  
  ::rpc::Error* temp = error_;
  error_ = NULL;
  return temp;
}
void Reply::set_allocated_error(::rpc::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Reply.error)
}

// optional string return_msg = 3;
void Reply::clear_return_msg() {
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Reply::return_msg() const {
  // @@protoc_insertion_point(field_get:rpc.Reply.return_msg)
  return return_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Reply::set_return_msg(const ::std::string& value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.Reply.return_msg)
}
void Reply::set_return_msg(const char* value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.Reply.return_msg)
}
void Reply::set_return_msg(const char* value, size_t size) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.Reply.return_msg)
}
::std::string* Reply::mutable_return_msg() {
  
  // @@protoc_insertion_point(field_mutable:rpc.Reply.return_msg)
  return return_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Reply::release_return_msg() {
  // @@protoc_insertion_point(field_release:rpc.Reply.return_msg)
  
  return return_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Reply::set_allocated_return_msg(::std::string* return_msg) {
  if (return_msg != NULL) {
    
  } else {
    
  }
  return_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_msg);
  // @@protoc_insertion_point(field_set_allocated:rpc.Reply.return_msg)
}

inline const Reply* Reply::internal_default_instance() {
  return &Reply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Message_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Type_descriptor_;
}
bool Message_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Message_Type Message::REQUEST;
const Message_Type Message::REPLY;
const Message_Type Message::Type_MIN;
const Message_Type Message::Type_MAX;
const int Message::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kTypeFieldNumber;
const int Message::kRequestFieldNumber;
const int Message::kReplyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_message_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.Message)
}

void Message::InitAsDefaultInstance() {
  Message_default_oneof_instance_->request_ = const_cast< ::rpc::Request*>(
      ::rpc::Request::internal_default_instance());
  Message_default_oneof_instance_->reply_ = const_cast< ::rpc::Reply*>(
      ::rpc::Reply::internal_default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:rpc.Message)
}

void Message::SharedCtor() {
  type_ = 0;
  clear_has_rq();
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:rpc.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (has_rq()) {
    clear_rq();
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  protobuf_InitDefaults_message_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::clear_rq() {
// @@protoc_insertion_point(one_of_clear_start:rpc.Message)
  switch (rq_case()) {
    case kRequest: {
      delete rq_.request_;
      break;
    }
    case kReply: {
      delete rq_.reply_;
      break;
    }
    case RQ_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RQ_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.Message)
  type_ = 0;
  clear_rq();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .rpc.Message.Type type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::rpc::Message_Type >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // optional .rpc.Request request = 2;
      case 2: {
        if (tag == 18) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        goto after_reply;
        break;
      }

      // optional .rpc.Reply reply = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reply()));
        } else {
          goto handle_unusual;
        }
       after_reply:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.Message)
  // optional .rpc.Message.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .rpc.Request request = 2;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *rq_.request_, output);
  }

  // optional .rpc.Reply reply = 3;
  if (has_reply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *rq_.reply_, output);
  }

  // @@protoc_insertion_point(serialize_end:rpc.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.Message)
  // optional .rpc.Message.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .rpc.Request request = 2;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *rq_.request_, false, target);
  }

  // optional .rpc.Reply reply = 3;
  if (has_reply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *rq_.reply_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:rpc.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.Message)
  size_t total_size = 0;

  // optional .rpc.Message.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (rq_case()) {
    // optional .rpc.Request request = 2;
    case kRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *rq_.request_);
      break;
    }
    // optional .rpc.Reply reply = 3;
    case kReply: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *rq_.reply_);
      break;
    }
    case RQ_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.Message)
    UnsafeMergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Message::UnsafeMergeFrom(const Message& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.rq_case()) {
    case kRequest: {
      mutable_request()->::rpc::Request::MergeFrom(from.request());
      break;
    }
    case kReply: {
      mutable_reply()->::rpc::Reply::MergeFrom(from.reply());
      break;
    }
    case RQ_NOT_SET: {
      break;
    }
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Message::IsInitialized() const {

  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(type_, other->type_);
  std::swap(rq_, other->rq_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// optional .rpc.Message.Type type = 1;
void Message::clear_type() {
  type_ = 0;
}
::rpc::Message_Type Message::type() const {
  // @@protoc_insertion_point(field_get:rpc.Message.type)
  return static_cast< ::rpc::Message_Type >(type_);
}
void Message::set_type(::rpc::Message_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:rpc.Message.type)
}

// optional .rpc.Request request = 2;
bool Message::has_request() const {
  return rq_case() == kRequest;
}
void Message::set_has_request() {
  _oneof_case_[0] = kRequest;
}
void Message::clear_request() {
  if (has_request()) {
    delete rq_.request_;
    clear_has_rq();
  }
}
 const ::rpc::Request& Message::request() const {
  // @@protoc_insertion_point(field_get:rpc.Message.request)
  return has_request()
      ? *rq_.request_
      : ::rpc::Request::default_instance();
}
::rpc::Request* Message::mutable_request() {
  if (!has_request()) {
    clear_rq();
    set_has_request();
    rq_.request_ = new ::rpc::Request;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Message.request)
  return rq_.request_;
}
::rpc::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:rpc.Message.request)
  if (has_request()) {
    clear_has_rq();
    ::rpc::Request* temp = rq_.request_;
    rq_.request_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_request(::rpc::Request* request) {
  clear_rq();
  if (request) {
    set_has_request();
    rq_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Message.request)
}

// optional .rpc.Reply reply = 3;
bool Message::has_reply() const {
  return rq_case() == kReply;
}
void Message::set_has_reply() {
  _oneof_case_[0] = kReply;
}
void Message::clear_reply() {
  if (has_reply()) {
    delete rq_.reply_;
    clear_has_rq();
  }
}
 const ::rpc::Reply& Message::reply() const {
  // @@protoc_insertion_point(field_get:rpc.Message.reply)
  return has_reply()
      ? *rq_.reply_
      : ::rpc::Reply::default_instance();
}
::rpc::Reply* Message::mutable_reply() {
  if (!has_reply()) {
    clear_rq();
    set_has_reply();
    rq_.reply_ = new ::rpc::Reply;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Message.reply)
  return rq_.reply_;
}
::rpc::Reply* Message::release_reply() {
  // @@protoc_insertion_point(field_release:rpc.Message.reply)
  if (has_reply()) {
    clear_has_rq();
    ::rpc::Reply* temp = rq_.reply_;
    rq_.reply_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_reply(::rpc::Reply* reply) {
  clear_rq();
  if (reply) {
    set_has_reply();
    rq_.reply_ = reply;
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Message.reply)
}

bool Message::has_rq() const {
  return rq_case() != RQ_NOT_SET;
}
void Message::clear_has_rq() {
  _oneof_case_[0] = RQ_NOT_SET;
}
Message::RqCase Message::rq_case() const {
  return Message::RqCase(_oneof_case_[0]);
}
inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

// @@protoc_insertion_point(global_scope)
